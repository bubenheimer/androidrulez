/*
 * Copyright (c) 2015-2020 Uli Bubenheimer
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

buildscript {
    ext {
        android_plugin_version = '7.0.1'
        ext.kotlin_version = '1.5.30'
    }

    repositories {
        google()
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenLocal()
    google()
    mavenCentral()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

group = 'org.bubenheimer'
version = '1.0-SNAPSHOT'

android {
    compileSdkVersion 30

    defaultConfig {
        targetSdkVersion 30
        minSdkVersion 21
        versionCode 1
        versionName '1.0'
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildTypes {
        debug {
        }
        release {
            shrinkResources false
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
        }
    }

    kotlinOptions {
        jvmTarget = "11"
        noJdk = true // this seems to work, so keep it this way for now
        verbose = true
        freeCompilerArgs = [
                "-progressive",
                "-Xexplicit-api=strict",
                "-Xjvm-default=all"
        ]
    }

    buildFeatures {
        buildConfig false
    }

    lintOptions {
        quiet false
        abortOnError false
        checkReleaseBuilds true
        ignoreWarnings false
        absolutePaths true
        checkAllWarnings true
        warningsAsErrors true
        // if true, don't include source code lines in the error output
        noLines false
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true
        // whether lint should include full issue explanations in the text error output
        explainIssues true
        textReport false
        xmlReport false
        htmlReport true
        // optional path to HTML report (default will be lint-results.html in the builddir)
        //htmlOutput file("$reportsDir/lint-report.html")
        checkTestSources true
        ignoreTestSources false
        checkGeneratedSources false
        checkDependencies false
    }

    dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

        // Give users access to ParallelRuleEngine, etc.
        api 'org.bubenheimer:kotlinrulez:1.0-SNAPSHOT'

        implementation "androidx.core:core-ktx:1.6.0"

        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1"
    }

    task debugSourceJar(type: Jar) {
        sourceSets {
            from debug.java.srcDirs, main.java.srcDirs
        }
        //noinspection GroovyAccessibility
        archiveClassifier = "sources"
    }
}

publishing {
    publications {
        debug(MavenPublication) {
            afterEvaluate {
                from components.debug
                artifactId = "$project.name-debug"

                artifact(debugSourceJar)
            }
        }

        release(MavenPublication) {
            afterEvaluate {
                from components.release
                artifactId = "$project.name-release"
            }
        }
    }
}
